<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BST on XiuFu Guo&#39;s Blog</title>
    <link>https://blog.xiufuguo.com/categories/bst/</link>
    <description>Recent content in BST on XiuFu Guo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Aug 2020 23:07:01 +0800</lastBuildDate>
    
	<atom:link href="https://blog.xiufuguo.com/categories/bst/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[LeetCode] 1038. Binary Search Tree to Greater Sum Tree</title>
      <link>https://blog.xiufuguo.com/post/leetcode/tags/bst/binary-search-tree-to-greater-sum-tree/</link>
      <pubDate>Sat, 01 Aug 2020 23:07:01 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/leetcode/tags/bst/binary-search-tree-to-greater-sum-tree/</guid>
      <description>1038. Binary Search Tree to Greater Sum Tree
python
1 2 3 4 5 6 7 8 9 10 11 12 13  class Solution: def bstToGst(self, root: TreeNode) -&amp;gt; TreeNode: self.sum = 0 self.helper(root) return root def helper(self, node): if not node: return self.helper(node.right) node.val += self.sum self.sum = node.val self.helper(node.left)   </description>
    </item>
    
    <item>
      <title>[LeetCode] 109. Convert Sorted List to Binary Search Tree</title>
      <link>https://blog.xiufuguo.com/post/leetcode/tags/bst/convert-sorted-list-to-binary-search-tree/</link>
      <pubDate>Sat, 01 Aug 2020 23:07:01 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/leetcode/tags/bst/convert-sorted-list-to-binary-search-tree/</guid>
      <description>109. Convert Sorted List to Binary Search Tree
python
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  class Solution: def sortedListToBST(self, head: ListNode) -&amp;gt; TreeNode: lst = [] while head: lst.append(head.val) head = head.next return self.helper(lst, 0, len(lst) - 1) def helper(self, lst, start, end): if start &amp;gt; end: return None if start == end: return TreeNode(lst[start]) mid = (start + end) &amp;gt;&amp;gt; 1 root = TreeNode(lst[mid]) root.</description>
    </item>
    
    <item>
      <title>[LeetCode] 235. Lowest Common Ancestor of a Binary Search Tree</title>
      <link>https://blog.xiufuguo.com/post/leetcode/tags/bst/lowest-common-ancestor-of-a-binary-search-tree/</link>
      <pubDate>Fri, 31 Jul 2020 22:58:39 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/leetcode/tags/bst/lowest-common-ancestor-of-a-binary-search-tree/</guid>
      <description>235. Lowest Common Ancestor of a Binary Search Tree
python
1 2 3 4 5 6 7 8 9 10  class Solution: def lowestCommonAncestor(self, root: &amp;#39;TreeNode&amp;#39;, p: &amp;#39;TreeNode&amp;#39;, q: &amp;#39;TreeNode&amp;#39;) -&amp;gt; &amp;#39;TreeNode&amp;#39;: if not root: return None if (root.val - p.val) * (root.val - q.val) &amp;lt;= 0: return root elif root.val &amp;gt; p.val and root.val &amp;gt; q.val: return self.lowestCommonAncestor(root.left, p, q) else: return self.lowestCommonAncestor(root.right, p, q)   </description>
    </item>
    
    <item>
      <title>[LeetCode] 98. Validate Binary Search Tree</title>
      <link>https://blog.xiufuguo.com/post/leetcode/tags/bst/validate-binary-search-tree/</link>
      <pubDate>Tue, 07 Jul 2020 14:31:46 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/leetcode/tags/bst/validate-binary-search-tree/</guid>
      <description>98. Validate Binary Search Tree
python
1 2 3 4 5 6 7 8 9 10  class Solution: def isValidBST(self, root: TreeNode) -&amp;gt; bool: return self.helper(root, float(&amp;#39;-inf&amp;#39;), float(&amp;#39;inf&amp;#39;)) def helper(self, root, lower, upper): if not root: return True return root.val &amp;gt; lower and root.val &amp;lt; upper \ and self.helper(root.left, lower, root.val) \ and self.helper(root.right, root.val, upper)   </description>
    </item>
    
  </channel>
</rss>