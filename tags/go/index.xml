<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Rubinera1n&#39;s Blog</title>
    <link>https://blog.xiufuguo.com/tags/go/</link>
    <description>Recent content in go on Rubinera1n&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 06 Jun 2020 01:49:23 +0800</lastBuildDate>
    
	<atom:link href="https://blog.xiufuguo.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>6. 用栈来求解汉诺塔问题</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%94%A8%E6%A0%88%E6%9D%A5%E6%B1%82%E8%A7%A3%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 06 Jun 2020 01:49:23 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%94%A8%E6%A0%88%E6%9D%A5%E6%B1%82%E8%A7%A3%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>5. 用一个栈实现另一个栈的排序</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%94%A8%E4%B8%80%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%A0%88%E7%9A%84%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 05 Jun 2020 01:41:16 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%94%A8%E4%B8%80%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%A0%88%E7%9A%84%E6%8E%92%E5%BA%8F/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>4. 猫狗队列</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%8C%AB%E7%8B%97%E9%98%9F%E5%88%97/</link>
      <pubDate>Thu, 04 Jun 2020 02:30:09 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%8C%AB%E7%8B%97%E9%98%9F%E5%88%97/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>3. 用递归函数和栈逆序一个栈</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%94%A8%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E5%92%8C%E6%A0%88%E9%80%86%E5%BA%8F%E4%B8%80%E4%B8%AA%E6%A0%88/</link>
      <pubDate>Wed, 03 Jun 2020 02:25:22 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%94%A8%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E5%92%8C%E6%A0%88%E9%80%86%E5%BA%8F%E4%B8%80%E4%B8%AA%E6%A0%88/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>2. 由两个栈组成的队列</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%94%B1%E4%B8%A4%E4%B8%AA%E6%A0%88%E7%BB%84%E6%88%90%E7%9A%84%E9%98%9F%E5%88%97/</link>
      <pubDate>Tue, 02 Jun 2020 12:58:33 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E7%94%B1%E4%B8%A4%E4%B8%AA%E6%A0%88%E7%BB%84%E6%88%90%E7%9A%84%E9%98%9F%E5%88%97/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>1. 设计 getMin 功能的栈</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E8%AE%BE%E8%AE%A1getmin%E5%8A%9F%E8%83%BD%E7%9A%84%E6%A0%88/</link>
      <pubDate>Mon, 01 Jun 2020 18:46:37 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/%E8%AE%BE%E8%AE%A1getmin%E5%8A%9F%E8%83%BD%E7%9A%84%E6%A0%88/</guid>
      <description>牛客网评测系统 python code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 import sys class GetMinStack: def __init__(self): self.stack = [] self.min_stack = [] self.size = 0 def push(self, x): self.stack.append(x)</description>
    </item>
    
  </channel>
</rss>