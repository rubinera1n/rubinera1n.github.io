<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sliding Window on XiuFu Guo&#39;s Blog</title>
    <link>https://blog.xiufuguo.com/tags/sliding-window/</link>
    <description>Recent content in Sliding Window on XiuFu Guo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 26 Jul 2020 22:23:58 +0800</lastBuildDate>
    
	<atom:link href="https://blog.xiufuguo.com/tags/sliding-window/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[LeetCode] 209. Minimum Size Subarray Sum</title>
      <link>https://blog.xiufuguo.com/post/leetcode/tags/sliding_window/minimum-size-subarray-sum/</link>
      <pubDate>Sun, 26 Jul 2020 22:23:58 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/leetcode/tags/sliding_window/minimum-size-subarray-sum/</guid>
      <description>209. Minimum Size Subarray Sum
python
1 2 3 4 5 6 7 8 9 10 11 12  class Solution: def minSubArrayLen(self, s: int, nums: List[int]) -&amp;gt; int: total = left = right = 0 res = len(nums) + 1 while right &amp;lt; len(nums): total += nums[right] while total &amp;gt;= s: res = min(res, right - left + 1) total -= nums[left] left += 1 right += 1 return res if res &amp;lt;= len(nums) else 0   </description>
    </item>
    
  </channel>
</rss>