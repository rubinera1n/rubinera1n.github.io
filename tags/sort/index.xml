<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sort on XiuFu Guo&#39;s Blog</title>
    <link>https://blog.xiufuguo.com/tags/sort/</link>
    <description>Recent content in Sort on XiuFu Guo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 Aug 2020 23:58:18 +0800</lastBuildDate>
    
	<atom:link href="https://blog.xiufuguo.com/tags/sort/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[LeetCode] 179. Largest Number</title>
      <link>https://blog.xiufuguo.com/post/leetcode/tags/sort/largest-number/</link>
      <pubDate>Sun, 02 Aug 2020 23:58:18 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/leetcode/tags/sort/largest-number/</guid>
      <description>179. Largest Number
python
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  class Solution: def largestNumber(self, nums: List[int]) -&amp;gt; str: # use quick sort, in-place self.quickSort(nums, 0, len(nums) - 1) return str(int(&amp;#34;&amp;#34;.join(map(str, nums)))) def quickSort(self, nums, l, r): if l &amp;gt;= r: return pos = self.partition(nums, l, r) self.quickSort(nums, l, pos - 1) self.</description>
    </item>
    
    <item>
      <title>[LeetCode] 56. Merge Intervals</title>
      <link>https://blog.xiufuguo.com/post/leetcode/tags/sort/merge-intervals/</link>
      <pubDate>Sun, 02 Aug 2020 23:56:54 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/leetcode/tags/sort/merge-intervals/</guid>
      <description>56. Merge Intervals python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution: def merge(self, intervals: List[List[int]]) -&amp;gt; List[List[int]]: if not intervals: return [] # sort intervals.sort() res = [] for interval in intervals: # 空 or 迭代的数组起点 &amp;gt; 答案最后一个数组尾巴，就进行插入</description>
    </item>
    
  </channel>
</rss>