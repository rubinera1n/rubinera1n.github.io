<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Rubinera1n&#39;s Blog</title>
    <link>https://blog.xiufuguo.com/tags/python/</link>
    <description>Recent content in python on Rubinera1n&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 06 Jun 2020 01:49:23 +0800</lastBuildDate>
    
	<atom:link href="https://blog.xiufuguo.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>6. 用栈来求解汉诺塔问题</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/06_use_stack_to_solve_hanoi_tower_problem/</link>
      <pubDate>Sat, 06 Jun 2020 01:49:23 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/06_use_stack_to_solve_hanoi_tower_problem/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>5. 用一个栈实现另一个栈的排序</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/05_use_one_stack_to_sort_another_stack/</link>
      <pubDate>Fri, 05 Jun 2020 01:41:16 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/05_use_one_stack_to_sort_another_stack/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>4. 猫狗队列</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/04_cat_and_dog_queue/</link>
      <pubDate>Thu, 04 Jun 2020 02:30:09 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/04_cat_and_dog_queue/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>3. 用递归函数和栈逆序一个栈</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/03_reverse_stack_use_recursive_function/</link>
      <pubDate>Wed, 03 Jun 2020 02:25:22 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/03_reverse_stack_use_recursive_function/</guid>
      <description>牛客网评测系统 python code go code</description>
    </item>
    
    <item>
      <title>2. 由两个栈组成的队列</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/02_implement_queue_using_stacks/</link>
      <pubDate>Tue, 02 Jun 2020 12:58:33 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/02_implement_queue_using_stacks/</guid>
      <description>牛客网评测系统 python code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 import sys class Queue: def __init__(self): self.inStack = [] self.outStack = [] def add(self, x): self.inStack.append(x) def poll(self): if not self.outStack</description>
    </item>
    
    <item>
      <title>1. 设计 getMin 功能的栈</title>
      <link>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/01_min_stack/</link>
      <pubDate>Mon, 01 Jun 2020 18:46:37 +0800</pubDate>
      
      <guid>https://blog.xiufuguo.com/post/programmer_code_interview_guide/ch01_stack_and_queue/01_min_stack/</guid>
      <description>牛客网评测系统 python code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 import sys class GetMinStack: def __init__(self): self.stack = [] self.min_stack = [] self.size = 0 def push(self, x): self.stack.append(x)</description>
    </item>
    
  </channel>
</rss>